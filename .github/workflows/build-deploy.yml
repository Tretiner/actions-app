name: Build/Deploy

env:
  APP_DIR: ~/actions_app/
  REGISTRY_NAME: ghcr.io

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Debug - List files
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in repository:"
          ls -la
          echo "Files in folder:"
          ls
          echo "Checking for Dockerfile:"
          find .. -name "Dockerfile" -type f

      - name: Setup variables
        run: |
          REPOSITORY_NAME_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          REGISTRY_NAME="${{ env.REGISTRY_NAME }}/${REPOSITORY_NAME_LOWER}"
          echo "REGISTRY_IMAGE=${REGISTRY_NAME}" >> $GITHUB_ENV
          echo "Set registry name: ${REGISTRY_NAME}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ActionsApp/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}-actions_app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare server directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p ${{ env.APP_DIR }}
  
      - name: Copy compose files to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          source: "compose.yaml"
          target: ${{ env.APP_DIR }}
  
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ env.APP_DIR }}
            docker compose pull
            docker compose down
            docker compose up -d
            docker image prune -f